{"ast":null,"code":"import { createContext } from 'react';\nimport { shippingAlternatives } from '../checkoutFracksatt';\nexport const CartContext = createContext({\n  cartItems: [],\n  selectedShipping: shippingAlternatives[0],\n  addProductToCart: product => {\n    console.log(\"Error adding \" + product.name + \"to cart\");\n  },\n  removeProductFromCart: product => {\n    console.log(\"Error removing \" + product.name + \"to cart\");\n  },\n  getTotalPrice: () => 0,\n  setSelectedShipping: shipping => {}\n});\nexport const CartConsumer = CartContext.Consumer;","map":{"version":3,"sources":["/Users/nawarmohra/StripCheckoput/StripCheckoput/src/components/context/cartContext.tsx"],"names":["createContext","shippingAlternatives","CartContext","cartItems","selectedShipping","addProductToCart","product","console","log","name","removeProductFromCart","getTotalPrice","setSelectedShipping","shipping","CartConsumer","Consumer"],"mappings":"AAAA,SAAeA,aAAf,QAA8C,OAA9C;AAGA,SAAmBC,oBAAnB,QAA+C,sBAA/C;AAUA,OAAO,MAAMC,WAAW,GAAGF,aAAa,CAAe;AACnDG,EAAAA,SAAS,EAAE,EADwC;AAEnDC,EAAAA,gBAAgB,EAAEH,oBAAoB,CAAC,CAAD,CAFa;AAInDI,EAAAA,gBAAgB,EAAGC,OAAD,IAAsB;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBF,OAAO,CAACG,IAA1B,GAAiC,SAA7C;AACH,GANkD;AAOnDC,EAAAA,qBAAqB,EAAGJ,OAAD,IAAsB;AACzCC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBF,OAAO,CAACG,IAA5B,GAAmC,SAA/C;AACH,GATkD;AAUnDE,EAAAA,aAAa,EAAE,MAAM,CAV8B;AAWnDC,EAAAA,mBAAmB,EAAGC,QAAD,IAAwB,CAAE;AAXI,CAAf,CAAjC;AAcP,OAAO,MAAMC,YAAY,GAAGZ,WAAW,CAACa,QAAjC","sourcesContent":["import React, {createContext, Component} from 'react';\nimport {ProviderState, CartItem} from './cartProvider';\nimport Products, {Product} from '../Products'\nimport { Shipping, shippingAlternatives } from '../checkoutFracksatt';\n\n\nexport interface ContextState extends ProviderState {\n    addProductToCart: (product: Product) => void,\n    removeProductFromCart: (product: Product) => void\n    getTotalPrice: () => number\n    setSelectedShipping: (shipping: Shipping) => void\n}\n\nexport const CartContext = createContext<ContextState>({\n    cartItems: [],\n    selectedShipping: shippingAlternatives[0],\n    \n    addProductToCart: (product: Product) => {\n        console.log(\"Error adding \" + product.name + \"to cart\")\n    },\n    removeProductFromCart: (product: Product) => {\n        console.log(\"Error removing \" + product.name + \"to cart\")\n    },\n    getTotalPrice: () => 0,\n    setSelectedShipping: (shipping: Shipping) => {}\n})\n\nexport const CartConsumer = CartContext.Consumer"]},"metadata":{},"sourceType":"module"}