{"ast":null,"code":"var _jsxFileName = \"/Users/nawarmohra/StripCheckoput/StripCheckoput/src/components/ProductList.tsx\";\n//Använd context & state för cart\nimport React, { Component } from 'react';\nimport ProductName from './ProductName';\nimport ProductImage from './ProductImage';\nimport { Button } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport Products from './Products';\nimport { Form, message } from 'antd';\nimport { CartConsumer } from './context/cartContext';\nconst key = 'updatable';\n\nconst onFinish = values => {\n  console.log('Success:', values);\n  message.success({\n    content: 'Added to cart!',\n    key,\n    duration: 2\n  });\n};\n\nclass ProductList extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      name: \"basic\",\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 20\n      },\n      layout: \"horizontal\",\n      onFinish: onFinish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CartConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, contextData => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 24\n        }\n      }, Products.map(product => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: product.id,\n          style: ProductListStyle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 36\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"/product/\" + product.name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 40\n          }\n        }, /*#__PURE__*/React.createElement(ProductImage, {\n          img: product.img,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 45\n          }\n        }), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 44\n          }\n        })), /*#__PURE__*/React.createElement(ProductName, {\n          name: product.name,\n          price: product.price,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 40\n          }\n        })), /*#__PURE__*/React.createElement(Button, {\n          htmlType: \"submit\",\n          style: ButtonStyle,\n          onClick: () => contextData.addProductToCart(product),\n          type: \"primary\",\n          icon: /*#__PURE__*/React.createElement(PlusOutlined, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 58\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 37\n          }\n        }, \"Add to cart\"));\n      }));\n    }));\n  }\n\n}\n\nexport let ButtonStyle = {\n  borderRadius: 15\n};\nexport let ProductListStyle = {\n  display: 'inline-block',\n  margin: 10,\n  height: 400,\n  width: 200,\n  padding: 0,\n  borderRadius: 15,\n  backgroundColor: '#FFF',\n  WebkitFilter: \"drop-shadow(0px 0px 5px #555)\",\n  filter: \"drop-shadow(0px 0px 5px #555)\"\n};\nexport default ProductList;","map":{"version":3,"sources":["/Users/nawarmohra/StripCheckoput/StripCheckoput/src/components/ProductList.tsx"],"names":["React","Component","ProductName","ProductImage","Button","PlusOutlined","Link","Products","Form","message","CartConsumer","key","onFinish","values","console","log","success","content","duration","ProductList","constructor","props","render","span","contextData","textAlign","map","product","id","ProductListStyle","name","img","price","ButtonStyle","addProductToCart","borderRadius","display","margin","height","width","padding","backgroundColor","WebkitFilter","filter"],"mappings":"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","sourcesContent":["//Använd context & state för cart\nimport React, { CSSProperties, Component } from 'react';\nimport ProductName from './ProductName';\nimport ProductImage from './ProductImage';\nimport { Button } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport Products from './Products';\nimport { Form, message,notification } from 'antd';\nimport {CartConsumer, ContextState} from './context/cartContext'; \n\n\nexport interface Props{\n\n}\n\n\nexport interface State {\n    \n}\nconst key = 'updatable';\n\nconst onFinish = (values:Props) => {\n    console.log('Success:', values);\n  \n    message.success({ content: 'Added to cart!', key, duration: 2 });\n  \n};\n      \n  \n\nclass ProductList extends Component<{}, State> {\n\n    constructor(props: {}){\n        super(props)\n    }\n\n    \n    \n    render(){\n        return (\n            <Form \n            name=\"basic\" \n            labelCol={{ span: 5 }}\n            wrapperCol={{ span: 20 }}\n            layout=\"horizontal\"\n            onFinish={onFinish}\n            >\n          \n            \n            <CartConsumer>\n               {(contextData: ContextState) => {\n                   return(\n                       <div style={{ textAlign: 'center' }}>\n                           {\n                           Products.map((product) => {\n                               return(\n                                   <div key = {product.id} style = {ProductListStyle}>\n                                    <Link to={\"/product/\" + product.name}>\n                                       <div>\n                                            <ProductImage img={product.img}/>\n                                           <hr/>\n                                       </div>\n                                       <ProductName name = {product.name} price = {product.price}/>\n                                    </Link>\n                                  \n                                    <Button htmlType=\"submit\" style = {ButtonStyle} \n                                    onClick={() => contextData.addProductToCart(product)} \n                                    type=\"primary\" icon={<PlusOutlined />}>\n                                     Add to cart\n                                    \n                                    </Button>\n                                  \n                                  \n                                   </div>\n                               )\n                           })}\n                       </div>\n                   )\n                }}\n           </CartConsumer>\n           </Form>\n       )\n   }\n   \n   \n   \n}\n\n        \n        \n       export let ButtonStyle: CSSProperties = {\n\n            borderRadius: 15\n     \n        }\n     \n     \n       export let ProductListStyle: CSSProperties = {\n            display: 'inline-block',\n            margin: 10,\n            height: 400,\n            width: 200,\n            padding: 0,\n            borderRadius: 15,\n            backgroundColor: '#FFF',\n            WebkitFilter: \"drop-shadow(0px 0px 5px #555)\",\n            filter: \"drop-shadow(0px 0px 5px #555)\",\n        };\n     \n     \n        \n\n    \n\n\nexport default ProductList;\n\n"]},"metadata":{},"sourceType":"module"}